<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>pointSpr</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_alpha = 0;
image_angle = 180;

angle = 0;

if (image_angle = 0) {
    instance_create(x, y, pointBObj);
    angle = 0;
} else if (image_angle = 90) {
    instance_create(x, y, pointAObj);
    angle = 1;
} else if (image_angle = 180) {
    instance_create(x, y, pointDObj);
    angle = 2;
} else {
    instance_create(x, y, pointCObj);
    angle = 3;
}


targetAngle = image_angle;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (image_angle != targetAngle) {
    image_angle -= 10;
}

if (image_alpha &lt; 1 and global.levelComplete = false) {
    image_alpha += 0.04;
}

if (global.levelComplete = true) {
    image_alpha -= 0.04;
    
}

if (global.levelComplete = true and image_alpha &lt; 0.01) {
    image_alpha = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.canRotate) {
    targetAngle -= 90;
    
    if (angle = 0) {
        with (instance_nearest(x, y, pointBObj)) {
            targetAngle -= 90;
        }
    } else if (angle = 1) {
        with (instance_nearest(x, y, pointAObj)) {
            targetAngle -= 90;
        }
    } else if (angle = 2) {
        with (instance_nearest(x, y, pointDObj)) {
            targetAngle -= 90;
        }
    } else if (angle = 3) {
        with (instance_nearest(x, y, pointCObj)) {
            targetAngle -= 90;
        }
    }
    
    
    audio_play_sound(rotateSnd, 10, false);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
